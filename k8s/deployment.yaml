apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  data:
    goparent.json: |
      {
          "service": {
              "host": "localhost",
              "port": 8000
          },
          "rethinkdb": {
              "host": "ruckus-rethinkdb-proxy.default",
              "port": 28015,
              "name": "goparent",
              "username": "goparent",
              "password": "babies"
          }
      }
  metadata:
    creationTimestamp: null
    name: goparent-config
    selfLink: /api/v1/namespaces/default/configmaps/goparent-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      run: goparent
    name: goparent
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/goparent
  spec:
    replicas: 3
    selector:
      matchLabels:
        run: goparent
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: goparent
      spec:
        containers:
        - image: goparent:v0.10
          imagePullPolicy: IfNotPresent
          name: goparent
          volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: config-volume
            configMap:
              name: goparent-config
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      run: goparent
    name: goparent
    selfLink: /api/v1/namespaces/default/services/goparent
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      run: goparent
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""